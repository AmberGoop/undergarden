public net.minecraft.world.entity.Entity portalEntrancePos # portalEntrancePos # portalEntrancePos

public net.minecraft.world.level.block.SpreadingSnowyDirtBlock canBeGrass(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z # canBeGrass
public net.minecraft.world.item.alchemy.PotionBrewing addMix(Lnet/minecraft/world/item/alchemy/Potion;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/Potion;)V # addMix
public net.minecraft.world.level.block.ComposterBlock add(FLnet/minecraft/world/level/ItemLike;)V # add
public net.minecraft.world.level.block.VineBlock hasFaces(Lnet/minecraft/world/level/block/state/BlockState;)Z # hasFaces
public net.minecraft.world.level.block.VineBlock getUpdatedState(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; # getUpdatedState
public net.minecraft.world.level.block.PointedDripstoneBlock$FluidInfo

public net.minecraft.client.particle.Particle gravity # gravity
public net.minecraft.client.particle.DripParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;)V # <init>
public net.minecraft.client.particle.DripParticle$DripHangParticle
public net.minecraft.client.particle.DripParticle$DripHangParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/particles/ParticleOptions;)V # <init>
public net.minecraft.client.particle.DripParticle$FallAndLandParticle
public net.minecraft.client.particle.DripParticle$FallAndLandParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/particles/ParticleOptions;)V # <init>
public net.minecraft.client.particle.DripParticle$DripLandParticle
public net.minecraft.client.particle.DripParticle$DripLandParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;)V # <init>

public net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacerType <init>(Lcom/mojang/serialization/Codec;)V
public net.minecraft.world.level.levelgen.NoiseRouterData SHIFT_X # SHIFT_X
public net.minecraft.world.level.levelgen.NoiseRouterData Y # Y
public net.minecraft.world.level.levelgen.NoiseRouterData SHIFT_Z # SHIFT_Z
public net.minecraft.world.level.levelgen.NoiseRouterData getFunction(Lnet/minecraft/core/HolderGetter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/DensityFunction; # getFunction

public net.minecraft.data.worldgen.placement.OrePlacements commonOrePlacement(ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; # commonOrePlacement
public net.minecraft.data.loot.BlockLootSubProvider HAS_NO_SHEARS_OR_SILK_TOUCH # HAS_NO_SHEARS_OR_SILK_TOUCH
public net.minecraft.data.loot.BlockLootSubProvider HAS_SILK_TOUCH # HAS_SILK_TOUCH
public net.minecraft.world.item.ArmorItem ARMOR_MODIFIER_UUID_PER_TYPE # ARMOR_MODIFIER_UUID_PER_TYPE
public net.minecraft.tags.EntityTypeTags create(Ljava/lang/String;)Lnet/minecraft/tags/TagKey; # create
public net.minecraft.tags.BiomeTags create(Ljava/lang/String;)Lnet/minecraft/tags/TagKey; # create
public net.minecraft.data.recipes.RecipeProvider has(Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; # has
public net.minecraft.world.entity.item.PrimedTnt owner # owner
public net.minecraft.world.level.block.FireBlock setFlammable(Lnet/minecraft/world/level/block/Block;II)V # setFlammable
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource; # source
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; # source

public net.minecraft.client.gui.Gui healthBlinkTime # healthBlinkTime
public net.minecraft.client.gui.Gui lastHealth # lastHealth
public net.minecraft.client.gui.Gui lastHealthTime # lastHealthTime
public net.minecraft.client.gui.Gui displayHealth # displayHealth
public net.minecraft.client.gui.Gui random # random
public net.minecraft.client.gui.Gui$HeartType
public net.minecraft.client.gui.Gui$HeartType forPlayer(Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/client/gui/Gui$HeartType; # forPlayer